y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
c(foo=11,bar=2,norf=NA)
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect<-c(11,2,NA)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
bye()
swirl()
my_vector<-1:20
my
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<-matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data<-data.fram(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient", "age", "weight", "bp", "rating", "test")
colnames(cnames,my_data)
?colnames
colnames(my_data)<-cnames
my_data
swirl()
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
1-<=10
10<-10
10<=10
5!=7
5!=7
!5==7
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5>9 || 6!=8 && 4>3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
reaminder(divisor=11num=5)
reaminder(divisor=11,num=5)
remainder(divisor=11,num=5)
reaminder(4,div=2)
remainder(4,div=2)
args(remainder)
submit()
?std
?stdev
?stddev
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[[1]]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("test")
submit()
mad_libs(place="Wilmington",adjective="yellow",noun="MacBook")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
info()
submit()
I%p%love%p%R
(I%p%love)%p%R
I%p%love
"I"%p%"love"%p%"R"
"I" %p% "love" %p% "R"
'I' %p% 'love' %p% 'R'
"I" %p% "love" %p% "R!"
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls)list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
View(flag_shapes)
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
library(datasets)
data(iris)
?iris
class(iris)
View(iris)
mean(iris$"Sepal.Width")
virginica<-iris[iris$Species=="virginica"]
virginica<-iris[,][iris$Species=="virginica"]
virginica<-iris[,iris$Species=="virginica"]
virginica<-subset(iris,iris$Species=="virginica")
View(virginica)
sum(!is.na(virginica$Sepal.Length))
sum(is.na(virginica$Sepal.Length))
mean(virginica$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 1, mean)
?apply
iris[,1:4]
iris[,0:4]
iris[,0:5]
iris[,0:6]
dim(iris)
library(datasets)
data(mtcars)
mtcars
a<-array(rnorm(2*2*10),c(2,2,10))
a
?array
?rnorm()
library(swirl)
swirl()
str(mapply)
args(mapply)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
noise<-function(n,mean,sd){}
noise<-function(n,mean,sd){rnorm(n,mean,sd)}
noise(5,1,2)
mapply(noise,1:5,1:5,2)
x<-rnorm(10)
x
f1<-gl(2,5)
f1
f2<-gl(5,2)
f2
interaction(f1,f2)
?str()
str(split(x,list(f1,f2)))
x
str(split(x,list(f1,f2)),drop=TRUE)
str(split(x,list(f1,f2),drop=TRUE))
rm(list=ls())
library(datasets)
data(mtcars)
mtcars
sapply(split(mtcars$mpg,mtcars$cyl),mean)
?split
?split()
split(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(split(mtcars$cyl),mean)
g <- factor(round(n * runif(n * nn)))
x <- rnorm(n * nn) + sqrt(as.numeric(g))
xg <- split(x, g)
head(mtcars)
tapply
?tapply
?mapply
?tapply
mtcarssub<-subset(mtcars,cyl==4 | cyl==8)
mtcarssub
tapply(mtcarssub$mpg,mtcarssub$cyl,mean)
meancyl<-tapply(mtcarssub$mpg,mtcarssub$cyl,mean)
abs(meancyl[1]-meancyl[2])
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
View(flags)
table(flags$animate)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
debug(ls())
debug(ls)
ls()
exit
?
exit
bye()
exit()
bye()
help
?
hlep
help
ls()
ls()
getwd()
Q
Q
f
Q
x
flags
getwd()
library(datasets)
data(iris)
iris
rm(list=ls())
library(datasets)
data(iris)
?iris
iris
S<-subset(iris,iris$Species=virginica)
S<-subset(iris,iris$Species="virginica")
S<-subset(iris,Species=virginica)
S
S<-subset(iris,Species="virginica")
S
?subset
S<-subset(iris,Species=="virginica")
S
rm(S)
tapply(iris,iris$Species,mean)
?tapply
tapply(iris$Species,iris$Species,mean)
tapply(Petal.Width,iris$Species,mean)
tapply(iris$Petal.Width,iris$Species,mean)
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
split(mtcars,mtcars$cyl)
mean(mtcars$mpg,mtcars$cyl)
lapply(mtcars,mean)
with(mtcars,tapply(mpg,cyl,mean))
?with
26.66364-15.1
with(mtcars,tapply(mpg,hp,mean))
with(mtcars,tapply(hp,cyl,mean))
209.21429-82.63636
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(10)
head()
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Perdiod)
table(plants$Active_Growth_Period)
str(plants)
library("rstudio", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
ggplot(subset(whiskey_brands,Brand!="Other brands")
,aes(x=Type, fill=Brand))+geom_bar(position="fill")
data(whiskey,package="flexmix")
library(ggplot2)
ggplot(subset(whiskey_brands,Brand!="Other brands")
,aes(x=Type, fill=Brand))+geom_bar(position="fill")
library(ggplot2)
data(whiskey,package="flexmix")
library(ggplot2)
ggplot(subset(whiskey_brands,Brand!="Other brands")
,aes(x=Type, fill=Brand))+geom_bar(position="fill")
data(whiskey,package="flexmix")
library(ggplot2)
ggplot(subset(whiskey_brands,Brand!="Other brands")
,aes(x=Type, fill=Brand))+geom_bar(position="fill")
View(dat)
data(whiskey,package="flexmix")
library(ggplot2)
ggplot(subset(whiskey_brands,Brand!="Other brands")
,aes(x=Type, fill=Brand))+geom_bar(position="fill")
data(whiskey,package="flexmix")
library(ggplot2)
data(whiskey)
ggplot(mtcars, aes(x=factor(cyl), fill=factor(vs))) +
geom_bar(position="dodge")
data(mtcars)
data<-data(mtcars)
rm
rm()
rm(dat)
rm(c cr files_full x y)
x<-(1:10)
?<-
?lm
swirl
library("swirl")
library(swirl)
install.packages("swirl")
library("swirl")
ls()
swirl()
install_course_zip("Users\Craig\Desktop\swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
install_course_zip("Users/Craig/Desktop/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
install_course_zip("Users/Craig/Desktop/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
install_course_zip("Users/Craig/Desktop/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
install_course_zip("/Users/Craig/Desktop/swirl_courses-master.zip", multi=TRUE,
which_course="R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3,4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
(z*2+100)
(z*2+1000)
z*2+1000
my_div
5+7
x<-5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+100
z*2+1000
my_div
install.packages("swirlify")
/Users/Craig/Desktop/swirl_courses-master/R_Programming/Basic_Building_Blocks\lesson.yaml
library(swirlify)
setlesson(/Users/Craig/Desktop/swirl_courses-master/R_Programming/Basic_Building_Blocks)
set_lesson("/Users/Craig/Desktop/swirl_courses-master/R_Programming/Basic_Building_Blocks")
set_lesson("/Users/Craig/Desktop/swirl_courses-master/R_Programming/Basic_Building_Blocks/lesson.yaml")
exit
0
exit
bye()
ls()
read.csv("/Users/Craig/Desktop/Econ/Cal Poly/MLS/MLS scores 2015.csv")
table<-read.csv("/Users/Craig/Desktop/Econ/Cal Poly/MLS/MLS scores 2015.csv")
View(table)
source('~/Desktop/Econ/Cal Poly/MLS/blog/Soccer-Scratch-Pad/10.17.15/10.17.15 soccer scratch pad.R')
source('~/Desktop/Econ/Cal Poly/MLS/blog/Soccer-Scratch-Pad/10.5.15/10.5.15 soccer scratch pad.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(data)
View(data)
source('~/.active-rstudio-document')
?plot
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35)),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie,main="% Games Tied in Regulation",ylab="% tied",pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
attach(data)
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35)),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie,main="% Games Tied in Regulation",ylab="% tied",pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35)),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35)),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie,main="% Games Tied in Regulation",ylab="% tied", ylim=c(15, 35), pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
#abline(v=1999.5,col="red")
#abline(v=2002.5,col="red")
source('~/Desktop/Econ/Cal Poly/MLS/Shootout/WEAI Portland/Kerr MLS Presentation/MLS Shootout Graphs.R')
attach(data)
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
abline(v=1999.5,col="red")
abline(v=2002.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie,main="% Games Tied (including OT)",ylab="% tied", ylim=c(15, 35), pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
abline(v=1999.5,col="red")
abline(v=2002.5,col="red")
detach(data)
attach(data)
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie_reg,main="% Games Tied in Regulation",ylab="% tied",ylim=c(15, 35),pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
abline(v=1999.5,col="red")
abline(v=2002.5,col="red")
abline(v=2003.5,col="red")
#for the plot without the lines, exlude the "abline" lines
plot(year,pct_tie,main="% Games Tied (including OT)",ylab="% tied", ylim=c(15, 35), pch=1,col=4,xaxt="n")
axis(1, at = seq(1996, 2014, by = 1),las=2)
abline(v=1999.5,col="red")
abline(v=2002.5,col="red")
abline(v=2003.5,col="red")
detach(data)
title: "delete"
